package graficos;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.util.ArrayList;

public class PizzaGrafico {
	
	private ArrayList<Dados> dados;
	private int quantidadeItens;
	
	private double duploPI = 2*Math.PI;
	private Graphics graphics;
	private ArrayList<Cores> cores = new ArrayList<>();
	private Cores corRGB;
	private Painel panelGrafico;
	
	private Color[] padraoCores = new Color[]{ 
			Color.BLUE, 
			Color.RED, 
			Color.GREEN, 
			Color.YELLOW, 
			Color.ORANGE, 
			Color.CYAN, 
			Color.DARK_GRAY, 
			Color.MAGENTA, 
			Color.PINK };
	
	private int contador = 0;

	/**
	 * Construtor, recebe Arraylist de dados para criação do grafico e o panel da interface para 
	 * referenciar o método de criação de legendas
	 * @param dados
	 * @param largura
	 * @param altura
	 * @param panelGrafico
	 */
	public PizzaGrafico(ArrayList<Dados> dados, Painel panelGrafico) {
		this.dados = dados;
		this.quantidadeItens = dados.size();
		
		this.panelGrafico = panelGrafico;
	}
	
	/**
	 * Desenha o as fatia do gráfico de pizza, sua borda e a legenda do gráfico
	 * @param bufferedImage
	 */
	public void desenharGrafico(BufferedImage bi) {
		//limpa arraylist de cores rgb
		cores.clear();
		
		//Ponto central da tela
		int origemX = 250;
		int origemY = 200;
		
		graphics = bi.createGraphics();
		
		int raio = 150;
		double anguloFatia = 0.0;
		double anguloFatiaAnterior = 0.0;

		for (int i = 0; i < quantidadeItens; i++) {
			// Calcula o angulo da Fatia
			anguloFatia = duploPI * dados.get(i).getPorcentagem() / 100.0 + anguloFatiaAnterior;
			
			//Passando os angulos de radiano pra grau
			int anguloGrausAtual = (int)Math.toDegrees(anguloFatia);
			int anguloGrausAnterior = (int)Math.toDegrees(anguloFatiaAnterior);
		
			//gerando cor randomica
			int redRandom = (int)(Math.random()*255);
			int greenRandom = (int)(Math.random()*255);
			int blueRandom = (int)(Math.random()*255);
			Color cor = padraoCores[contador];
			//salvando a cor em um arraylist para representação da legenda
			corRGB = new Cores(redRandom, greenRandom, blueRandom);
			cores.add(corRGB);
			
			//Correção de GAP.
			if (anguloGrausAtual == 359) {
				anguloGrausAtual= 360;
			}
			
			//pintando a pizza
			graphics.setColor(color);
			graphics.fillArc(100, 50, 2*raio, 2*raio, anguloGrausAnterior, anguloGrausAtual-anguloGrausAnterior);
			//
			
			anguloFatiaAnterior = anguloFatia;
			
		}
		
		//desenhando borda da pizza
		CircunferenciaPontoMedio circunferencia = new CircunferenciaPontoMedio();
		circunferencia.CircPontoMedio(origemX, origemY, raio, bi);
		
		//passando array de cores para a pintura das legendas
		panelGrafico.gerarLegendas(this.cores);
	}
	
}
